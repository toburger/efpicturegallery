// <auto-generated />
namespace efpicturegallery.Migrations

open System
open System.Collections.Generic
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Migrations.Operations
open Microsoft.EntityFrameworkCore.Migrations.Operations.Builders
open Microsoft.EntityFrameworkCore.Storage.ValueConversion


type private galleriesTable = {
    name: OperationBuilder<AddColumnOperation>
    url: OperationBuilder<AddColumnOperation>
}

type private tagsTable = {
    name: OperationBuilder<AddColumnOperation>
}

type private picturesTable = {
    filename: OperationBuilder<AddColumnOperation>
    gallery: OperationBuilder<AddColumnOperation>
    width: OperationBuilder<AddColumnOperation>
    height: OperationBuilder<AddColumnOperation>
    created: OperationBuilder<AddColumnOperation>
}

type private gallery_tagsTable = {
    gallery: OperationBuilder<AddColumnOperation>
    tag: OperationBuilder<AddColumnOperation>
}

[<DbContext(typeof<Model.DbContext>)>]
[<Migration("20200713090936_InitialMigration")>]
type InitialMigration() =
    inherit Migration()

    override this.Up(migrationBuilder:MigrationBuilder) =
        migrationBuilder.CreateTable(
            name = "galleries"
            ,columns = (fun table -> 
            {
                name = table.Column<string>(nullable = false)
                url = table.Column<string>(nullable = true)
            })
            ,constraints =
                (fun table -> 
                    table.PrimaryKey("pk_galleries", (fun x -> (x.name) :> obj)) |> ignore
                ) 
            ) |> ignore

        migrationBuilder.CreateTable(
            name = "tags"
            ,columns = (fun table -> 
            {
                name = table.Column<string>(nullable = false)
            })
            ,constraints =
                (fun table -> 
                    table.PrimaryKey("pk_tags", (fun x -> (x.name) :> obj)) |> ignore
                ) 
            ) |> ignore

        migrationBuilder.CreateTable(
            name = "pictures"
            ,columns = (fun table -> 
            {
                filename = table.Column<string>(nullable = false)
                gallery = table.Column<string>(nullable = false)
                width = table.Column<int>(nullable = false)
                height = table.Column<int>(nullable = false)
                created = table.Column<Int64>(nullable = false)
            })
            ,constraints =
                (fun table -> 
                    table.PrimaryKey("pk_pictures", (fun x -> (x.filename, x.gallery) :> obj)) |> ignore
                    table.ForeignKey(
                        name = "fk_gallery_pictures",
                        column = (fun x -> (x.gallery) :> obj), principalTable = "galleries", principalColumn = "name", onDelete = ReferentialAction.Restrict) |> ignore

                ) 
            ) |> ignore

        migrationBuilder.CreateTable(
            name = "gallery_tags"
            ,columns = (fun table -> 
            {
                gallery = table.Column<string>(nullable = false)
                tag = table.Column<string>(nullable = false)
            })
            ,constraints =
                (fun table -> 
                    table.PrimaryKey("pk_gallery_tags", (fun x -> (x.gallery, x.tag) :> obj)) |> ignore
                    table.ForeignKey(
                        name = "fk_tags_gallery",
                        column = (fun x -> (x.gallery) :> obj), principalTable = "galleries", principalColumn = "name", onDelete = ReferentialAction.Cascade) |> ignore

                    table.ForeignKey(
                        name = "fk_tags_tag",
                        column = (fun x -> (x.tag) :> obj), principalTable = "tags", principalColumn = "name", onDelete = ReferentialAction.Cascade) |> ignore

                ) 
            ) |> ignore

        migrationBuilder.CreateIndex(
            name = "ix_gallery_tags_tag"
            , table = "gallery_tags", column = "tag") |> ignore

        migrationBuilder.CreateIndex(
            name = "ix_pictures_gallery"
            , table = "pictures", column = "gallery") |> ignore


    override this.Down(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropTable(
            name = "gallery_tags"
            ) |> ignore

        migrationBuilder.DropTable(
            name = "pictures"
            ) |> ignore

        migrationBuilder.DropTable(
            name = "tags"
            ) |> ignore

        migrationBuilder.DropTable(
            name = "galleries"
            ) |> ignore


    override this.BuildTargetModel(modelBuilder: ModelBuilder) =
        modelBuilder.HasAnnotation("ProductVersion", "3.1.5")
             |> ignore

        modelBuilder.Entity("Model+Gallery", (fun b ->

            b.Property<string>("Name")
                .HasColumnName("name")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Url")
                .HasColumnName("url")
                .HasColumnType("TEXT") |> ignore

            b.HasKey("Name")
                .HasName("pk_galleries") |> ignore

            b.ToTable("galleries") |> ignore

        )) |> ignore

        modelBuilder.Entity("Model+GalleryTag", (fun b ->

            b.Property<string>("Gallery")
                .HasColumnName("gallery")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Tag")
                .HasColumnName("tag")
                .HasColumnType("TEXT") |> ignore

            b.HasKey("Gallery", "Tag")
                .HasName("pk_gallery_tags") |> ignore


            b.HasIndex("Tag")
                .HasName("ix_gallery_tags_tag") |> ignore

            b.ToTable("gallery_tags") |> ignore

        )) |> ignore

        modelBuilder.Entity("Model+Picture", (fun b ->

            b.Property<string>("Filename")
                .HasColumnName("filename")
                .HasColumnType("TEXT") |> ignore
            b.Property<string>("Gallery")
                .HasColumnName("gallery")
                .HasColumnType("TEXT") |> ignore
            b.Property<Int64>("Created")
                .IsRequired()
                .HasColumnName("created")
                .HasColumnType("INTEGER") |> ignore
            b.Property<int>("Height")
                .IsRequired()
                .HasColumnName("height")
                .HasColumnType("INTEGER") |> ignore
            b.Property<int>("Width")
                .IsRequired()
                .HasColumnName("width")
                .HasColumnType("INTEGER") |> ignore

            b.HasKey("Filename", "Gallery")
                .HasName("pk_pictures") |> ignore


            b.HasIndex("Gallery")
                .HasName("ix_pictures_gallery") |> ignore

            b.ToTable("pictures") |> ignore

        )) |> ignore

        modelBuilder.Entity("Model+Tag", (fun b ->

            b.Property<string>("Name")
                .HasColumnName("name")
                .HasColumnType("TEXT") |> ignore

            b.HasKey("Name")
                .HasName("pk_tags") |> ignore

            b.ToTable("tags") |> ignore

        )) |> ignore

        modelBuilder.Entity("Model+GalleryTag", (fun b ->
            b.HasOne("Model+Gallery","GalleryNav")
                .WithMany("TagsSet")
                .HasForeignKey("Gallery")
                .HasConstraintName("fk_tags_gallery")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired() |> ignore
            b.HasOne("Model+Tag","TagNav")
                .WithMany("GalleriesSet")
                .HasForeignKey("Tag")
                .HasConstraintName("fk_tags_tag")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired() |> ignore
        )) |> ignore

        modelBuilder.Entity("Model+Picture", (fun b ->
            b.HasOne("Model+Gallery","GalleryNav")
                .WithMany("PicturesSet")
                .HasForeignKey("Gallery")
                .HasConstraintName("fk_gallery_pictures") |> ignore
        )) |> ignore

